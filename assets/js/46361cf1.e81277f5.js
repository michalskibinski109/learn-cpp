"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[725],{7974:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=i(4848),s=i(8453);const a={},t="\ud83d\udd04 Ternary Operators",o={id:"ternary_operators",title:"\ud83d\udd04 Ternary Operators",description:"\u270f\ufe0f Syntax",source:"@site/docs/16-ternary_operators.md",sourceDirName:".",slug:"/ternary_operators",permalink:"/learn-cpp/docs/ternary_operators",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/16-ternary_operators.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd27 Functions",permalink:"/learn-cpp/docs/functions"},next:{title:"\ud83d\udd12 Const Keyword",permalink:"/learn-cpp/docs/const"}},l={},c=[{value:"\u270f\ufe0f Syntax",id:"\ufe0f-syntax",level:2},{value:"\ud83d\udd00 Nested Ternary Operators",id:"-nested-ternary-operators",level:2},{value:"\ud83d\ude80 Advantages of Ternary Operators",id:"-advantages-of-ternary-operators",level:2},{value:"\ud83c\udf1f Concise Code",id:"-concise-code",level:3},{value:"\u26a1 Inline Initialization",id:"-inline-initialization",level:3},{value:"\ud83d\udca1 Readability in Simple Conditions",id:"-readability-in-simple-conditions",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"-ternary-operators",children:"\ud83d\udd04 Ternary Operators"}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-syntax",children:"\u270f\ufe0f Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"condition ? value_if_true : value_if_false\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'int age = 20;\nstd::string isAdult = (age >= 18) ? "Yes" : "No";\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, the variable ",(0,r.jsx)(n.code,{children:"isAdult"})," will be assigned the value ",(0,r.jsx)(n.code,{children:'"Yes"'})," if the condition ",(0,r.jsx)(n.code,{children:"(age >= 18)"})," is true. Otherwise, it will be assigned ",(0,r.jsx)(n.code,{children:'"No"'}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-nested-ternary-operators",children:"\ud83d\udd00 Nested Ternary Operators"}),"\n",(0,r.jsx)(n.p,{children:"You can also nest ternary operators for more complex conditions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'int age = 20;\nstd::string isAdult = (age >= 18) ? "Yes" : (age == 17) ? "Almost" : "No";\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Here, the variable ",(0,r.jsx)(n.code,{children:"isAdult"})," will be assigned ",(0,r.jsx)(n.code,{children:'"Yes"'})," if ",(0,r.jsx)(n.code,{children:"age >= 18"}),", ",(0,r.jsx)(n.code,{children:'"Almost"'})," if ",(0,r.jsx)(n.code,{children:"age == 17"}),", and ",(0,r.jsx)(n.code,{children:'"No"'})," otherwise."]}),"\n",(0,r.jsx)(n.h2,{id:"-advantages-of-ternary-operators",children:"\ud83d\ude80 Advantages of Ternary Operators"}),"\n",(0,r.jsx)(n.h3,{id:"-concise-code",children:"\ud83c\udf1f Concise Code"}),"\n",(0,r.jsx)(n.p,{children:"Ternary operators allow you to write concise, one-liner conditional statements, which can make your code more readable when used appropriately."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"int max = (a > b) ? a : b;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This assigns ",(0,r.jsx)(n.code,{children:"max"})," the value of ",(0,r.jsx)(n.code,{children:"a"})," if ",(0,r.jsx)(n.code,{children:"a"})," is greater than ",(0,r.jsx)(n.code,{children:"b"}),", otherwise, it assigns ",(0,r.jsx)(n.code,{children:"b"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"-inline-initialization",children:"\u26a1 Inline Initialization"}),"\n",(0,r.jsx)(n.p,{children:"They are useful for initializing variables in a single line, especially when the initialization depends on a condition."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'std::string result = (score > 50) ? "Pass" : "Fail";\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-readability-in-simple-conditions",children:"\ud83d\udca1 Readability in Simple Conditions"}),"\n",(0,r.jsx)(n.p,{children:"For simple conditions, ternary operators can enhance readability by reducing the amount of code needed to express the logic."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(6540);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
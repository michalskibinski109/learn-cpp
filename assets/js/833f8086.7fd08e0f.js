"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[733],{9087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=t(4848),o=t(8453);const r={},s="Raw pointers",a={id:"pointers",title:"Raw pointers",description:"Pointer is just memory address of a variable.",source:"@site/docs/7-pointers.md",sourceDirName:".",slug:"/pointers",permalink:"/learn-cpp/docs/pointers",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/7-pointers.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\uddc2\ufe0f Enums",permalink:"/learn-cpp/docs/enums"},next:{title:"References in C++",permalink:"/learn-cpp/docs/references"}},p={},c=[{value:"Smart pointers",id:"smart-pointers",level:2},{value:"Unique pointer",id:"unique-pointer",level:3}];function d(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"raw-pointers",children:"Raw pointers"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Pointer is just memory address of a variable."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int a = 5;\nint* pointer = &a; // pointer is now pointing to a\nvoid* voidPointer = &a; // void pointer can point to any type.\n\nint b = *pointer; // b is now 5\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int a = 5;\nvoid* pointer = &a; // pointer is now pointing to a\n*pointer = 10; // error. void pointer can't be dereferenced.\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp"})}),"\n",(0,i.jsx)(n.admonition,{title:"setting type of pointer",type:"tip",children:(0,i.jsx)(n.p,{children:"It is not needed to set the type of pointer. You can do it for better readability."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"char* buffer = new char[8]; // buffer is now pointing to the first element of the array. (8 bytes)\n\nmemset(buffer, 0, 8); // set all 8 bytes to 0.\n\ndelete[] buffer; // delete the array.\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Why do we need to delete the array?",type:"warning",children:(0,i.jsx)(n.p,{children:"If we don't delete the array, it will cause memory leak.\nIt will take up memory until the program is closed."})}),"\n",(0,i.jsx)(n.h2,{id:"smart-pointers",children:"Smart pointers"}),"\n",(0,i.jsx)(n.h3,{id:"unique-pointer",children:"Unique pointer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <memory>\n\nint main() {\n    std::unique_ptr<int> pointer = std::make_unique<int>(5); // pointer is now pointing to an integer with value 5\n    *pointer = 10; // pointer now points to 10\n    auto pointer2 = pointer // error. unique pointer can't be copied\n    auto pointer2 = std::move(pointer); // pointer2 now points to 10, pointer is now nullptr\n\n} // pointer is automatically deleted when it goes out of scope\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["why use ",(0,i.jsx)(n.code,{children:"make_unique"})," instead of ",(0,i.jsx)(n.code,{children:"new"}),"?"]}),(0,i.jsxs)(n.p,{children:["When constructor throws an exception, ",(0,i.jsx)(n.code,{children:"new"})," will return a pointer to the object"]})]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
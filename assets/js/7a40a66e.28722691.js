"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[689],{6045:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>E,contentTitle:()=>R,default:()=>S,frontMatter:()=>I,metadata:()=>T,toc:()=>N});var t=r(4848),a=r(8453),s=r(6540),i=r(4164),l=r(3104),o=r(6347),c=r(205),u=r(7485),d=r(1682),h=r(679);function f(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return f(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:r}=e;const t=(0,o.W6)(),a=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,u.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function v(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,a=p(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[o,u]=b({queryString:r,groupId:t}),[d,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,a]=(0,h.Dv)(r);return[t,(0,s.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:t}),v=(()=>{const e=o??d;return m({value:e,tabValues:a})?e:null})();(0,c.A)((()=>{v&&l(v)}),[v]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,a]),tabValues:a}}var x=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j(e){let{className:n,block:r,selectedValue:a,selectValue:s,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),d=e=>{const n=e.currentTarget,r=c.indexOf(n),t=o[r].value;t!==a&&(u(n),s(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,t.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...s,className:(0,i.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function y(e){let{lazy:n,children:r,selectedValue:a}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=v(e);return(0,t.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,t.jsx)(j,{...n,...e}),(0,t.jsx)(y,{...n,...e})]})}function k(e){const n=(0,x.A)();return(0,t.jsx)(w,{...e,children:f(e.children)},String(n))}const V={tabItem:"tabItem_Ymn6"};function C(e){let{children:n,hidden:r,className:a}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(V.tabItem,a),hidden:r,children:n})}const I={},R="References in C++",T={id:"references",title:"References in C++",description:"What is a reference?",source:"@site/docs/8-references.mdx",sourceDirName:".",slug:"/references",permalink:"/docs/references",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/8-references.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Raw pointers",permalink:"/docs/pointers"},next:{title:"Classes",permalink:"/docs/classes_and_structs"}},E={},N=[{value:"What is a reference?",id:"what-is-a-reference",level:3},{value:"Example",id:"example",level:4},{value:"Using Pointers and References in Functions",id:"using-pointers-and-references-in-functions",level:3},{value:"When to Use References Over Pointers",id:"when-to-use-references-over-pointers",level:3}];function O(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"references-in-c",children:"References in C++"}),"\n",(0,t.jsx)(n.h3,{id:"what-is-a-reference",children:"What is a reference?"}),"\n",(0,t.jsxs)(n.p,{children:["A reference in C++ is an ",(0,t.jsx)(n.strong,{children:"alias"}),", or an alternative name, for an existing variable. Once a reference is initialized to a variable, either the variable name or the reference name can be used to refer to the variable."]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int x = 5; // Declare an integer variable\nint &ref = x; // Declare a reference to the variable\nLOG(ref); // Outputs: 5\nLOG(&ref); // Outputs: memory address of x (e.g., 0000006CC94FFAF0)\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"references are immutable",type:"warning",children:(0,t.jsx)(n.p,{children:"Once a reference is initialized to a variable, it cannot be changed to refer to another variable. Pointers can."})}),"\n",(0,t.jsx)(n.h3,{id:"using-pointers-and-references-in-functions",children:"Using Pointers and References in Functions"}),"\n",(0,t.jsxs)(k,{defaultValue:"pointers",values:[{label:"Using Pointers",value:"pointers"},{label:"Using References",value:"references"}],children:[(0,t.jsx)(C,{value:"pointers",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"void increment(int* value) {\n    // value++; // This would increment the address of the pointer, not the value it points to.\n    (*value)++; // This increments the value that the pointer points to.\n}\n\nint main() {\n    int x = 5;\n    increment(&x); // Pass the address of x to the function\n    LOG(x); // Outputs: 6\n}\n"})})}),(0,t.jsx)(C,{value:"references",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"void increment(int  &value) {\n    value++;\n}\n\nint main() {\n    int x = 5;\n    increment(x);\n    LOG(x); // Outputs: 6\n}\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"when-to-use-references-over-pointers",children:"When to Use References Over Pointers"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Simplicity"}),": References are simpler to use than pointers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Safety"}),": References cannot be ",(0,t.jsx)(n.code,{children:"NULL"})," and are guaranteed to refer to a valid object."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Readability"}),": References make the code more readable and less cluttered."]}),"\n"]})]})}function S(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(O,{...e})}):O(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[976],{1810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=r(4848),a=r(8453),s=r(1470),l=r(9365);const i={},c="Strings and string literals",o={id:"strings",title:"Strings and string literals",description:"Char",source:"@site/docs/13-strings.mdx",sourceDirName:".",slug:"/strings",permalink:"/learn-cpp/docs/strings",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/13-strings.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interfaces in C++",permalink:"/learn-cpp/docs/interfaces"},next:{title:"Maps",permalink:"/learn-cpp/docs/maps"}},u={},d=[{value:"Char",id:"char",level:2},{value:"String",id:"string",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"strings-and-string-literals",children:"Strings and string literals"}),"\n",(0,n.jsx)(t.h2,{id:"char",children:"Char"}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"char"})," is a single byte of data, which can represent a single character. In C++, a ",(0,n.jsx)(t.code,{children:"char"})," can be used to represent a character or a small integer. The ASCII table is a common way to map characters to integers. For example, the ASCII value of 'A' is 65, and 'a' is 97."]}),"\n",(0,n.jsx)(t.p,{children:"Sure, here's how you can add tabs to your MDX file. The first tab will contain your current code, and the second tab will contain an example of an array of characters:"}),"\n",(0,n.jsxs)(s.A,{defaultValue:"tab1",values:[{label:"Single Character",value:"tab1"},{label:"Array of Characters",value:"tab2"}],children:[(0,n.jsx)(l.A,{value:"tab1",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"char character = 'A';\n\nstd::cout << character << std::endl;  // A\nstd::cout << (int)character << std::endl;  // 65\n"})})}),(0,n.jsx)(l.A,{value:"tab2",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'char *characters = "Hello, World!";\n// char characters[] = "Hello, World!";\n\nstd::cout << characters << std::endl;  // Hello, World!\n'})})})]}),"\n",(0,n.jsxs)(t.admonition,{type:"tip",children:[(0,n.jsxs)(t.mdxAdmonitionTitle,{children:["what is difference between ",(0,n.jsx)(t.code,{children:"char *str"})," and ",(0,n.jsx)(t.code,{children:"char str[]"}),"?"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"char *str"})," is a pointer to a character, while ",(0,n.jsx)(t.code,{children:"char str[]"})," is an array of characters. The main difference is that ",(0,n.jsx)(t.code,{children:"char *str"})," is a pointer that can be reassigned to point to different memory locations, while ",(0,n.jsx)(t.code,{children:"char str[]"})," is an array that has a fixed size and cannot be reassigned."]})]}),"\n",(0,n.jsx)(t.h2,{id:"string",children:"String"}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"string"})," is a sequence of characters. In C++, strings are represented by the ",(0,n.jsx)(t.code,{children:"std::string"})," class, which is part of the C++ Standard Library. You can create a string by enclosing characters in double quotes."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'#include <string>\n\nstd::string name = "John Doe";\n\nstd::cout << name << std::endl;  // John Doe\n'})}),"\n",(0,n.jsxs)(t.p,{children:["How does computer know where the string ends?\nThe computer knows where the string ends by using a null-terminator character (",(0,n.jsx)(t.code,{children:"\\0"}),"). The null-terminator is a special character that marks the end of a string. When the computer encounters a null-terminator, it knows that the string has ended."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"char str[2] = {'H', 'I'};\nstd::cout << str << std::endl;  // HI\ufffdp\ufffd\ufffd\ufffd\nchar str2[3] = {'H', 'I', '\\0'}; // \\0 is the null-terminator\nstd::cout << str2 << std::endl;  // HI\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},9365:(e,t,r)=>{r.d(t,{A:()=>l});r(6540);var n=r(4164);const a={tabItem:"tabItem_Ymn6"};var s=r(4848);function l(e){let{children:t,hidden:r,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(a.tabItem,l),hidden:r,children:t})}},1470:(e,t,r)=>{r.d(t,{A:()=>w});var n=r(6540),a=r(4164),s=r(3104),l=r(6347),i=r(205),c=r(7485),o=r(1682),u=r(679);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}(r);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const a=(0,l.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,s=h(e),[l,c]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[o,d]=m({queryString:r,groupId:a}),[f,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Dv)(r);return[a,(0,n.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),g=(()=>{const e=o??f;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{g&&c(g)}),[g]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(4848);function v(e){let{className:t,block:r,selectedValue:n,selectValue:l,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),u=e=>{const t=e.currentTarget,r=c.indexOf(t),a=i[r].value;a!==n&&(o(t),l(a))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},t),children:i.map((e=>{let{value:t,label:r,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>c.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function j(e){let{lazy:t,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function y(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function w(e){const t=(0,b.A)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(t))}},8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>i});var n=r(6540);const a={},s=n.createContext(a);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[482],{2583:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var t=i(4848),r=i(8453);const o={},c="Linker",s={id:"linker",title:"Linker",description:"Linker is a program that takes one or more object (.obj) files generated by a compiler and combines them into a single executable program.",source:"@site/docs/2-linker.md",sourceDirName:".",slug:"/linker",permalink:"/learn-cpp/docs/linker",draft:!1,unlisted:!1,editUrl:"https://github.com/michalskibinski109/learn-cpp/tree/main/docs/2-linker.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How compiler works?",permalink:"/learn-cpp/docs/compiler"},next:{title:"variables",permalink:"/learn-cpp/docs/variables"}},d={},l=[{value:"Entry Point",id:"entry-point",level:2},{value:"Linking errors",id:"linking-errors",level:2},{value:"Undefined reference",id:"undefined-reference",level:3},{value:"Static and Extern Keywords",id:"static-and-extern-keywords",level:3},{value:"Static Keyword",id:"static-keyword",level:4},{value:"Extern Keyword",id:"extern-keyword",level:4}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"linker",children:"Linker"}),"\n",(0,t.jsxs)(n.p,{children:["Linker is a program that takes one or more object (",(0,t.jsx)(n.code,{children:".obj"}),") files generated by a compiler and combines them into a single executable program."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Compiler errors start with ",(0,t.jsx)(n.code,{children:"C"})," and linker errors start with ",(0,t.jsx)(n.code,{children:"LNK"}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"As long as the function is not used. Linker will not include it in the final executable."})}),"\n",(0,t.jsx)(n.h2,{id:"entry-point",children:"Entry Point"}),"\n",(0,t.jsxs)(n.p,{children:["Entry point is the first function that is executed when the program starts. In C++ it is ",(0,t.jsx)(n.code,{children:"main"})," function by default."]}),"\n",(0,t.jsx)(n.h2,{id:"linking-errors",children:"Linking errors"}),"\n",(0,t.jsx)(n.h3,{id:"undefined-reference",children:"Undefined reference"}),"\n",(0,t.jsx)(n.p,{children:"When the linker can't find the definition of a function or a variable that is used in the program, it will throw an error."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"\nvoid undefinedFunction();\n\nvoid function(){\n    // This function is not defined anywhere. \n    // LNK2019: unresolved external symbol\n    undefinedFunction(); // if it would be commented. Code would compile.\n}\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"static-and-extern-keywords",children:"Static and Extern Keywords"}),"\n",(0,t.jsxs)(n.p,{children:["In C++, the ",(0,t.jsx)(n.code,{children:"static"})," and ",(0,t.jsx)(n.code,{children:"extern"})," keywords are used to control the visibility and linkage of variables and functions."]}),"\n",(0,t.jsx)(n.h4,{id:"static-keyword",children:"Static Keyword"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"static"})," keyword, when used in a function declaration, restricts the visibility of the function to the file in which it is defined. This means that the function cannot be called from other files, even if they include the header file where the function is declared. This is useful when you want to keep a function private to a file and prevent it from being used elsewhere."]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'// File: main.cpp\n\nstatic void someFunction() {\n    Log("Hello"); // This function is not defined anywhere.\n}\n\nint main() {\n    someFunction(); // This will work.\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"// File: anotherFile.cpp\n\nextern void someFunction(); // Trying to declare the function from main.cpp\n\nint anotherFunction() {\n    someFunction(); // This will throw an error because someFunction is static in main.cpp and can't be accessed here.\n    return 0;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the above example, ",(0,t.jsx)(n.code,{children:"someFunction"})," is declared as ",(0,t.jsx)(n.code,{children:"static"})," in ",(0,t.jsx)(n.code,{children:"main.cpp"}),", so it can only be called within ",(0,t.jsx)(n.code,{children:"main.cpp"}),". If we try to declare it in ",(0,t.jsx)(n.code,{children:"anotherFile.cpp"})," using ",(0,t.jsx)(n.code,{children:"extern"})," and call it, it will throw an error."]}),"\n",(0,t.jsx)(n.h4,{id:"extern-keyword",children:"Extern Keyword"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"extern"})," keyword is used to declare a variable or function in another file. This is useful when you want to use a function or variable defined in one file in another file."]}),"\n",(0,t.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'// File: main.cpp\n\nvoid someFunction() {\n    Log("Hello"); // This function is not defined anywhere.\n}\n\nint main() {\n    return 0;\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"// File: anotherFile.cpp\n\nextern void someFunction(); // Declaring the function from main.cpp\n\nint anotherFunction() {\n    someFunction(); // This will work because someFunction is not static in main.cpp and can be accessed here.\n    return 0;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, ",(0,t.jsx)(n.code,{children:"someFunction"})," is not declared as ",(0,t.jsx)(n.code,{children:"static"})," in ",(0,t.jsx)(n.code,{children:"main.cpp"}),", so it can be declared in ",(0,t.jsx)(n.code,{children:"anotherFile.cpp"})," using ",(0,t.jsx)(n.code,{children:"extern"})," and called successfully.\nint main()"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'won\'t throw an error.\n\n\n### inline keyword\nIf the function is defined as inline, it will be included in the final executable. \n\n```cpp\ninline void someFunction(){\n    cout << "Hello";\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["when included only body of the function will be included (",(0,t.jsx)(n.code,{children:'cout << "Hello";'}),")."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>s});var t=i(6540);const r={},o=t.createContext(r);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
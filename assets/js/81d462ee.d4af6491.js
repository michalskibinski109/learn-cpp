"use strict";(self.webpackChunkcpp_learn=self.webpackChunkcpp_learn||[]).push([[952],{2214:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var l=i(4848),r=i(8453);const s={},t="How compiler works?",c={id:"compiler",title:"How compiler works?",description:"A compiler is a program that translates human-readable source code into computer-executable machine code. Here's a simplified overview of how it works:",source:"@site/docs/1-compiler.md",sourceDirName:".",slug:"/compiler",permalink:"/docs/compiler",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1-compiler.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction to C++ Course Notes",permalink:"/docs/intro"},next:{title:"Linker",permalink:"/docs/linker"}},o={},d=[{value:"Preprocessed file <code>.i</code>",id:"preprocessed-file-i",level:2},{value:"Include",id:"include",level:3},{value:"Define",id:"define",level:3},{value:"IF",id:"if",level:3},{value:"pragma",id:"pragma",level:3},{value:"What is translation unit?",id:"what-is-translation-unit",level:4},{value:"OBJ file",id:"obj-file",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"how-compiler-works",children:"How compiler works?"}),"\n",(0,l.jsx)(n.p,{children:"A compiler is a program that translates human-readable source code into computer-executable machine code. Here's a simplified overview of how it works:"}),"\n",(0,l.jsxs)(n.h2,{id:"preprocessed-file-i",children:["Preprocessed file ",(0,l.jsx)(n.code,{children:".i"})]}),"\n",(0,l.jsxs)(n.p,{children:["The preprocessing stage handles directives like ",(0,l.jsx)(n.code,{children:"#include"}),", ",(0,l.jsx)(n.code,{children:"#define"}),", and ",(0,l.jsx)(n.code,{children:"#if"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"include",children:"Include"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"When including included content is pasted in the place."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'\nvoid function(){\n#include "EndBrace.h"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Will work."}),"\n",(0,l.jsxs)(n.p,{children:["For example ",(0,l.jsx)(n.code,{children:"#include <iostream>"})," will add 50k lines."]}),"\n",(0,l.jsx)(n.h3,{id:"define",children:"Define"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"\n#define LOG(x) std::cout << x << std::endl;\n\n#define INTIGER int\n\nINTIGER add(int a, int b){\n    LOG(a);\n    return a + b;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"if",children:"IF"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"#if 1\nint FunctionThatWillHideWhenConditionFails()\n#endif\n"})}),"\n",(0,l.jsx)(n.h3,{id:"pragma",children:"pragma"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"#pragma once\n"})}),"\n",(0,l.jsx)(n.p,{children:"Ensures the file is only included once in a single compilation. Etc. Prevents us to include 1 header file multiple times into 1 translation unit."}),"\n",(0,l.jsx)(n.h4,{id:"what-is-translation-unit",children:"What is translation unit?"}),"\n",(0,l.jsx)(n.p,{children:"A translation unit is a single source file and all the files that it includes, either directly or indirectly."}),"\n",(0,l.jsx)(n.h2,{id:"obj-file",children:"OBJ file"}),"\n",(0,l.jsx)(n.p,{children:"Create assembly output in hex."}),"\n",(0,l.jsxs)(n.p,{children:["::: note\nIt is possible to show pretty assembly code\n",(0,l.jsx)(n.code,{children:"objdump -d -M intel -S file.o"}),"\n:::"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);